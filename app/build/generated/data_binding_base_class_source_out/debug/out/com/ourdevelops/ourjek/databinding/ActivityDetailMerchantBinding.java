// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ourdevelops.ourjek.R;
import customfonts.TextViewSFProDisplayMedium;
import customfonts.TextViewSFProDisplayRegular;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailMerchantBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final RecyclerView catmerchantnear;

  @NonNull
  public final View costLine;

  @NonNull
  public final TextViewSFProDisplayMedium costText;

  @NonNull
  public final TextViewSFProDisplayMedium estimatedText;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final ImageView foodBook;

  @NonNull
  public final TextViewSFProDisplayRegular hours;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextViewSFProDisplayRegular kategoridistance;

  @NonNull
  public final LinearLayout lldetail;

  @NonNull
  public final LinearLayout llmerchantnear;

  @NonNull
  public final RecyclerView merchantnear;

  @NonNull
  public final TextViewSFProDisplayMedium nama;

  @NonNull
  public final ImageView nodataimage;

  @NonNull
  public final TextViewSFProDisplayMedium nodatanear;

  @NonNull
  public final ImageView partner;

  @NonNull
  public final ImageView partnershim;

  @NonNull
  public final CardView priceContainer;

  @NonNull
  public final ImageView promo;

  @NonNull
  public final ImageView promoshim;

  @NonNull
  public final TextViewSFProDisplayMedium qtyText;

  @NonNull
  public final RelativeLayout rlnodata;

  @NonNull
  public final FrameLayout rlnotif;

  @NonNull
  public final LinearLayout shimlistcatnear;

  @NonNull
  public final LinearLayout shimlistnear;

  @NonNull
  public final ShimmerFrameLayout shimmerbadge;

  @NonNull
  public final ShimmerFrameLayout shimmerbadgepromo;

  @NonNull
  public final ShimmerFrameLayout shimmerchantnear;

  @NonNull
  public final ShimmerFrameLayout shimmerdetail;

  @NonNull
  public final TextViewSFProDisplayRegular textnotif;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextViewSFProDisplayMedium tutup;

  private ActivityDetailMerchantBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView backBtn,
      @NonNull RecyclerView catmerchantnear, @NonNull View costLine,
      @NonNull TextViewSFProDisplayMedium costText,
      @NonNull TextViewSFProDisplayMedium estimatedText, @NonNull FloatingActionButton fab,
      @NonNull ImageView foodBook, @NonNull TextViewSFProDisplayRegular hours,
      @NonNull ImageView image, @NonNull TextViewSFProDisplayRegular kategoridistance,
      @NonNull LinearLayout lldetail, @NonNull LinearLayout llmerchantnear,
      @NonNull RecyclerView merchantnear, @NonNull TextViewSFProDisplayMedium nama,
      @NonNull ImageView nodataimage, @NonNull TextViewSFProDisplayMedium nodatanear,
      @NonNull ImageView partner, @NonNull ImageView partnershim, @NonNull CardView priceContainer,
      @NonNull ImageView promo, @NonNull ImageView promoshim,
      @NonNull TextViewSFProDisplayMedium qtyText, @NonNull RelativeLayout rlnodata,
      @NonNull FrameLayout rlnotif, @NonNull LinearLayout shimlistcatnear,
      @NonNull LinearLayout shimlistnear, @NonNull ShimmerFrameLayout shimmerbadge,
      @NonNull ShimmerFrameLayout shimmerbadgepromo, @NonNull ShimmerFrameLayout shimmerchantnear,
      @NonNull ShimmerFrameLayout shimmerdetail, @NonNull TextViewSFProDisplayRegular textnotif,
      @NonNull Toolbar toolbar, @NonNull TextViewSFProDisplayMedium tutup) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.backBtn = backBtn;
    this.catmerchantnear = catmerchantnear;
    this.costLine = costLine;
    this.costText = costText;
    this.estimatedText = estimatedText;
    this.fab = fab;
    this.foodBook = foodBook;
    this.hours = hours;
    this.image = image;
    this.kategoridistance = kategoridistance;
    this.lldetail = lldetail;
    this.llmerchantnear = llmerchantnear;
    this.merchantnear = merchantnear;
    this.nama = nama;
    this.nodataimage = nodataimage;
    this.nodatanear = nodatanear;
    this.partner = partner;
    this.partnershim = partnershim;
    this.priceContainer = priceContainer;
    this.promo = promo;
    this.promoshim = promoshim;
    this.qtyText = qtyText;
    this.rlnodata = rlnodata;
    this.rlnotif = rlnotif;
    this.shimlistcatnear = shimlistcatnear;
    this.shimlistnear = shimlistnear;
    this.shimmerbadge = shimmerbadge;
    this.shimmerbadgepromo = shimmerbadgepromo;
    this.shimmerchantnear = shimmerchantnear;
    this.shimmerdetail = shimmerdetail;
    this.textnotif = textnotif;
    this.toolbar = toolbar;
    this.tutup = tutup;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailMerchantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailMerchantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_merchant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailMerchantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.catmerchantnear;
      RecyclerView catmerchantnear = rootView.findViewById(id);
      if (catmerchantnear == null) {
        break missingId;
      }

      id = R.id.cost_line;
      View costLine = rootView.findViewById(id);
      if (costLine == null) {
        break missingId;
      }

      id = R.id.cost_text;
      TextViewSFProDisplayMedium costText = rootView.findViewById(id);
      if (costText == null) {
        break missingId;
      }

      id = R.id.estimated_text;
      TextViewSFProDisplayMedium estimatedText = rootView.findViewById(id);
      if (estimatedText == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = rootView.findViewById(id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.food_book;
      ImageView foodBook = rootView.findViewById(id);
      if (foodBook == null) {
        break missingId;
      }

      id = R.id.hours;
      TextViewSFProDisplayRegular hours = rootView.findViewById(id);
      if (hours == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.kategoridistance;
      TextViewSFProDisplayRegular kategoridistance = rootView.findViewById(id);
      if (kategoridistance == null) {
        break missingId;
      }

      id = R.id.lldetail;
      LinearLayout lldetail = rootView.findViewById(id);
      if (lldetail == null) {
        break missingId;
      }

      id = R.id.llmerchantnear;
      LinearLayout llmerchantnear = rootView.findViewById(id);
      if (llmerchantnear == null) {
        break missingId;
      }

      id = R.id.merchantnear;
      RecyclerView merchantnear = rootView.findViewById(id);
      if (merchantnear == null) {
        break missingId;
      }

      id = R.id.nama;
      TextViewSFProDisplayMedium nama = rootView.findViewById(id);
      if (nama == null) {
        break missingId;
      }

      id = R.id.nodataimage;
      ImageView nodataimage = rootView.findViewById(id);
      if (nodataimage == null) {
        break missingId;
      }

      id = R.id.nodatanear;
      TextViewSFProDisplayMedium nodatanear = rootView.findViewById(id);
      if (nodatanear == null) {
        break missingId;
      }

      id = R.id.partner;
      ImageView partner = rootView.findViewById(id);
      if (partner == null) {
        break missingId;
      }

      id = R.id.partnershim;
      ImageView partnershim = rootView.findViewById(id);
      if (partnershim == null) {
        break missingId;
      }

      id = R.id.price_container;
      CardView priceContainer = rootView.findViewById(id);
      if (priceContainer == null) {
        break missingId;
      }

      id = R.id.promo;
      ImageView promo = rootView.findViewById(id);
      if (promo == null) {
        break missingId;
      }

      id = R.id.promoshim;
      ImageView promoshim = rootView.findViewById(id);
      if (promoshim == null) {
        break missingId;
      }

      id = R.id.qty_text;
      TextViewSFProDisplayMedium qtyText = rootView.findViewById(id);
      if (qtyText == null) {
        break missingId;
      }

      id = R.id.rlnodata;
      RelativeLayout rlnodata = rootView.findViewById(id);
      if (rlnodata == null) {
        break missingId;
      }

      id = R.id.rlnotif;
      FrameLayout rlnotif = rootView.findViewById(id);
      if (rlnotif == null) {
        break missingId;
      }

      id = R.id.shimlistcatnear;
      LinearLayout shimlistcatnear = rootView.findViewById(id);
      if (shimlistcatnear == null) {
        break missingId;
      }

      id = R.id.shimlistnear;
      LinearLayout shimlistnear = rootView.findViewById(id);
      if (shimlistnear == null) {
        break missingId;
      }

      id = R.id.shimmerbadge;
      ShimmerFrameLayout shimmerbadge = rootView.findViewById(id);
      if (shimmerbadge == null) {
        break missingId;
      }

      id = R.id.shimmerbadgepromo;
      ShimmerFrameLayout shimmerbadgepromo = rootView.findViewById(id);
      if (shimmerbadgepromo == null) {
        break missingId;
      }

      id = R.id.shimmerchantnear;
      ShimmerFrameLayout shimmerchantnear = rootView.findViewById(id);
      if (shimmerchantnear == null) {
        break missingId;
      }

      id = R.id.shimmerdetail;
      ShimmerFrameLayout shimmerdetail = rootView.findViewById(id);
      if (shimmerdetail == null) {
        break missingId;
      }

      id = R.id.textnotif;
      TextViewSFProDisplayRegular textnotif = rootView.findViewById(id);
      if (textnotif == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tutup;
      TextViewSFProDisplayMedium tutup = rootView.findViewById(id);
      if (tutup == null) {
        break missingId;
      }

      return new ActivityDetailMerchantBinding((RelativeLayout) rootView, appBarLayout, backBtn,
          catmerchantnear, costLine, costText, estimatedText, fab, foodBook, hours, image,
          kategoridistance, lldetail, llmerchantnear, merchantnear, nama, nodataimage, nodatanear,
          partner, partnershim, priceContainer, promo, promoshim, qtyText, rlnodata, rlnotif,
          shimlistcatnear, shimlistnear, shimmerbadge, shimmerbadgepromo, shimmerchantnear,
          shimmerdetail, textnotif, toolbar, tutup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
