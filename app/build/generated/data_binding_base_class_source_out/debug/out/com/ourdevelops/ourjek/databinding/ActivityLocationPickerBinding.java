// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import customfonts.Button_SF_Pro_Display_Medium;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLocationPickerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView imgBack;

  @NonNull
  public final AutoCompleteTextView locationPickerAutoCompleteText;

  @NonNull
  public final LinearLayout locationPickerContainer;

  @NonNull
  public final TextView locationPickerCurrentAddress;

  @NonNull
  public final Button_SF_Pro_Display_Medium locationPickerDestinationButton;

  @NonNull
  public final Space locationPickerSpace;

  private ActivityLocationPickerBinding(@NonNull RelativeLayout rootView, @NonNull CardView imgBack,
      @NonNull AutoCompleteTextView locationPickerAutoCompleteText,
      @NonNull LinearLayout locationPickerContainer, @NonNull TextView locationPickerCurrentAddress,
      @NonNull Button_SF_Pro_Display_Medium locationPickerDestinationButton,
      @NonNull Space locationPickerSpace) {
    this.rootView = rootView;
    this.imgBack = imgBack;
    this.locationPickerAutoCompleteText = locationPickerAutoCompleteText;
    this.locationPickerContainer = locationPickerContainer;
    this.locationPickerCurrentAddress = locationPickerCurrentAddress;
    this.locationPickerDestinationButton = locationPickerDestinationButton;
    this.locationPickerSpace = locationPickerSpace;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLocationPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLocationPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_location_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLocationPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBack;
      CardView imgBack = rootView.findViewById(id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.locationPicker_autoCompleteText;
      AutoCompleteTextView locationPickerAutoCompleteText = rootView.findViewById(id);
      if (locationPickerAutoCompleteText == null) {
        break missingId;
      }

      id = R.id.locationPicker_container;
      LinearLayout locationPickerContainer = rootView.findViewById(id);
      if (locationPickerContainer == null) {
        break missingId;
      }

      id = R.id.locationPicker_currentAddress;
      TextView locationPickerCurrentAddress = rootView.findViewById(id);
      if (locationPickerCurrentAddress == null) {
        break missingId;
      }

      id = R.id.locationPicker_destinationButton;
      Button_SF_Pro_Display_Medium locationPickerDestinationButton = rootView.findViewById(id);
      if (locationPickerDestinationButton == null) {
        break missingId;
      }

      id = R.id.locationPicker_space;
      Space locationPickerSpace = rootView.findViewById(id);
      if (locationPickerSpace == null) {
        break missingId;
      }

      return new ActivityLocationPickerBinding((RelativeLayout) rootView, imgBack,
          locationPickerAutoCompleteText, locationPickerContainer, locationPickerCurrentAddress,
          locationPickerDestinationButton, locationPickerSpace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
