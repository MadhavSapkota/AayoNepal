// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import com.ourdevelops.ourjek.customviews.PromoView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogisticPaymentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView billToName;

  @NonNull
  public final RelativeLayout btnApplyPromoCode;

  @NonNull
  public final RelativeLayout confirm;

  @NonNull
  public final TextView confirmText;

  @NonNull
  public final TextView deliveryFee;

  @NonNull
  public final TextView estimatedDistance;

  @NonNull
  public final TextView estimatedLoader;

  @NonNull
  public final TextView estimatedWeight;

  @NonNull
  public final PromoView llPromo;

  @NonNull
  public final TextView loaderFee;

  @NonNull
  public final TextView receiverAddress;

  @NonNull
  public final TextView receiverName;

  @NonNull
  public final TextView receiverNumber;

  @NonNull
  public final TextView remarks;

  @NonNull
  public final LinearLayout remarksLayout;

  @NonNull
  public final RecyclerView rvPaymentMethods;

  @NonNull
  public final TextView senderAddress;

  @NonNull
  public final TextView senderName;

  @NonNull
  public final TextView senderNumber;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView total;

  @NonNull
  public final TextView tvPromo;

  @NonNull
  public final TextView weightFee;

  private ActivityLogisticPaymentBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView billToName, @NonNull RelativeLayout btnApplyPromoCode,
      @NonNull RelativeLayout confirm, @NonNull TextView confirmText, @NonNull TextView deliveryFee,
      @NonNull TextView estimatedDistance, @NonNull TextView estimatedLoader,
      @NonNull TextView estimatedWeight, @NonNull PromoView llPromo, @NonNull TextView loaderFee,
      @NonNull TextView receiverAddress, @NonNull TextView receiverName,
      @NonNull TextView receiverNumber, @NonNull TextView remarks,
      @NonNull LinearLayout remarksLayout, @NonNull RecyclerView rvPaymentMethods,
      @NonNull TextView senderAddress, @NonNull TextView senderName, @NonNull TextView senderNumber,
      @NonNull TextView title, @NonNull TextView total, @NonNull TextView tvPromo,
      @NonNull TextView weightFee) {
    this.rootView = rootView;
    this.billToName = billToName;
    this.btnApplyPromoCode = btnApplyPromoCode;
    this.confirm = confirm;
    this.confirmText = confirmText;
    this.deliveryFee = deliveryFee;
    this.estimatedDistance = estimatedDistance;
    this.estimatedLoader = estimatedLoader;
    this.estimatedWeight = estimatedWeight;
    this.llPromo = llPromo;
    this.loaderFee = loaderFee;
    this.receiverAddress = receiverAddress;
    this.receiverName = receiverName;
    this.receiverNumber = receiverNumber;
    this.remarks = remarks;
    this.remarksLayout = remarksLayout;
    this.rvPaymentMethods = rvPaymentMethods;
    this.senderAddress = senderAddress;
    this.senderName = senderName;
    this.senderNumber = senderNumber;
    this.title = title;
    this.total = total;
    this.tvPromo = tvPromo;
    this.weightFee = weightFee;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogisticPaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogisticPaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_logistic_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogisticPaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.billToName;
      TextView billToName = rootView.findViewById(id);
      if (billToName == null) {
        break missingId;
      }

      id = R.id.btnApplyPromoCode;
      RelativeLayout btnApplyPromoCode = rootView.findViewById(id);
      if (btnApplyPromoCode == null) {
        break missingId;
      }

      id = R.id.confirm;
      RelativeLayout confirm = rootView.findViewById(id);
      if (confirm == null) {
        break missingId;
      }

      id = R.id.confirmText;
      TextView confirmText = rootView.findViewById(id);
      if (confirmText == null) {
        break missingId;
      }

      id = R.id.deliveryFee;
      TextView deliveryFee = rootView.findViewById(id);
      if (deliveryFee == null) {
        break missingId;
      }

      id = R.id.estimatedDistance;
      TextView estimatedDistance = rootView.findViewById(id);
      if (estimatedDistance == null) {
        break missingId;
      }

      id = R.id.estimatedLoader;
      TextView estimatedLoader = rootView.findViewById(id);
      if (estimatedLoader == null) {
        break missingId;
      }

      id = R.id.estimatedWeight;
      TextView estimatedWeight = rootView.findViewById(id);
      if (estimatedWeight == null) {
        break missingId;
      }

      id = R.id.llPromo;
      PromoView llPromo = rootView.findViewById(id);
      if (llPromo == null) {
        break missingId;
      }

      id = R.id.loaderFee;
      TextView loaderFee = rootView.findViewById(id);
      if (loaderFee == null) {
        break missingId;
      }

      id = R.id.receiverAddress;
      TextView receiverAddress = rootView.findViewById(id);
      if (receiverAddress == null) {
        break missingId;
      }

      id = R.id.receiverName;
      TextView receiverName = rootView.findViewById(id);
      if (receiverName == null) {
        break missingId;
      }

      id = R.id.receiverNumber;
      TextView receiverNumber = rootView.findViewById(id);
      if (receiverNumber == null) {
        break missingId;
      }

      id = R.id.remarks;
      TextView remarks = rootView.findViewById(id);
      if (remarks == null) {
        break missingId;
      }

      id = R.id.remarksLayout;
      LinearLayout remarksLayout = rootView.findViewById(id);
      if (remarksLayout == null) {
        break missingId;
      }

      id = R.id.rvPaymentMethods;
      RecyclerView rvPaymentMethods = rootView.findViewById(id);
      if (rvPaymentMethods == null) {
        break missingId;
      }

      id = R.id.senderAddress;
      TextView senderAddress = rootView.findViewById(id);
      if (senderAddress == null) {
        break missingId;
      }

      id = R.id.senderName;
      TextView senderName = rootView.findViewById(id);
      if (senderName == null) {
        break missingId;
      }

      id = R.id.senderNumber;
      TextView senderNumber = rootView.findViewById(id);
      if (senderNumber == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.total;
      TextView total = rootView.findViewById(id);
      if (total == null) {
        break missingId;
      }

      id = R.id.tv_promo;
      TextView tvPromo = rootView.findViewById(id);
      if (tvPromo == null) {
        break missingId;
      }

      id = R.id.weightFee;
      TextView weightFee = rootView.findViewById(id);
      if (weightFee == null) {
        break missingId;
      }

      return new ActivityLogisticPaymentBinding((RelativeLayout) rootView, billToName,
          btnApplyPromoCode, confirm, confirmText, deliveryFee, estimatedDistance, estimatedLoader,
          estimatedWeight, llPromo, loaderFee, receiverAddress, receiverName, receiverNumber,
          remarks, remarksLayout, rvPaymentMethods, senderAddress, senderName, senderNumber, title,
          total, tvPromo, weightFee);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
