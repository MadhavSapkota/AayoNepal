// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import customfonts.Button_SF_Pro_Display_Medium;
import customfonts.TextViewSFProDisplayMedium;
import customfonts.TextViewSFProDisplayRegular;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final Button_SF_Pro_Display_Medium btnConfirm;

  @NonNull
  public final Button_SF_Pro_Display_Medium destinationButton;

  @NonNull
  public final LinearLayout destinationContainer;

  @NonNull
  public final LinearLayout llShowDetail;

  @NonNull
  public final LinearLayout lllogo;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final Button_SF_Pro_Display_Medium pickUpButton;

  @NonNull
  public final LinearLayout pickUpContainer;

  @NonNull
  public final TextViewSFProDisplayRegular pickUpText;

  @NonNull
  public final CircleImageView profileimage;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final RelativeLayout rlprogress;

  @NonNull
  public final Space space;

  @NonNull
  public final TextViewSFProDisplayMedium tvPlaceName;

  private ActivityMapBinding(@NonNull CoordinatorLayout rootView, @NonNull ImageView backBtn,
      @NonNull Button_SF_Pro_Display_Medium btnConfirm,
      @NonNull Button_SF_Pro_Display_Medium destinationButton,
      @NonNull LinearLayout destinationContainer, @NonNull LinearLayout llShowDetail,
      @NonNull LinearLayout lllogo, @NonNull ImageView logo,
      @NonNull Button_SF_Pro_Display_Medium pickUpButton, @NonNull LinearLayout pickUpContainer,
      @NonNull TextViewSFProDisplayRegular pickUpText, @NonNull CircleImageView profileimage,
      @NonNull RelativeLayout relativeLayout, @NonNull RelativeLayout rlprogress,
      @NonNull Space space, @NonNull TextViewSFProDisplayMedium tvPlaceName) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.btnConfirm = btnConfirm;
    this.destinationButton = destinationButton;
    this.destinationContainer = destinationContainer;
    this.llShowDetail = llShowDetail;
    this.lllogo = lllogo;
    this.logo = logo;
    this.pickUpButton = pickUpButton;
    this.pickUpContainer = pickUpContainer;
    this.pickUpText = pickUpText;
    this.profileimage = profileimage;
    this.relativeLayout = relativeLayout;
    this.rlprogress = rlprogress;
    this.space = space;
    this.tvPlaceName = tvPlaceName;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.btnConfirm;
      Button_SF_Pro_Display_Medium btnConfirm = rootView.findViewById(id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.destinationButton;
      Button_SF_Pro_Display_Medium destinationButton = rootView.findViewById(id);
      if (destinationButton == null) {
        break missingId;
      }

      id = R.id.destinationContainer;
      LinearLayout destinationContainer = rootView.findViewById(id);
      if (destinationContainer == null) {
        break missingId;
      }

      id = R.id.llShowDetail;
      LinearLayout llShowDetail = rootView.findViewById(id);
      if (llShowDetail == null) {
        break missingId;
      }

      id = R.id.lllogo;
      LinearLayout lllogo = rootView.findViewById(id);
      if (lllogo == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = rootView.findViewById(id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.pickUpButton;
      Button_SF_Pro_Display_Medium pickUpButton = rootView.findViewById(id);
      if (pickUpButton == null) {
        break missingId;
      }

      id = R.id.pickUpContainer;
      LinearLayout pickUpContainer = rootView.findViewById(id);
      if (pickUpContainer == null) {
        break missingId;
      }

      id = R.id.pickUpText;
      TextViewSFProDisplayRegular pickUpText = rootView.findViewById(id);
      if (pickUpText == null) {
        break missingId;
      }

      id = R.id.profileimage;
      CircleImageView profileimage = rootView.findViewById(id);
      if (profileimage == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = rootView.findViewById(id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.rlprogress;
      RelativeLayout rlprogress = rootView.findViewById(id);
      if (rlprogress == null) {
        break missingId;
      }

      id = R.id.space;
      Space space = rootView.findViewById(id);
      if (space == null) {
        break missingId;
      }

      id = R.id.tvPlaceName;
      TextViewSFProDisplayMedium tvPlaceName = rootView.findViewById(id);
      if (tvPlaceName == null) {
        break missingId;
      }

      return new ActivityMapBinding((CoordinatorLayout) rootView, backBtn, btnConfirm,
          destinationButton, destinationContainer, llShowDetail, lllogo, logo, pickUpButton,
          pickUpContainer, pickUpText, profileimage, relativeLayout, rlprogress, space,
          tvPlaceName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
