// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.tabs.TabLayout;
import com.ourdevelops.ourjek.R;
import com.ourdevelops.ourjek.customviews.CartIconView;
import customfonts.TextViewSFProDisplayMedium;
import customfonts.TextViewSFProDisplayRegular;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewDetailMerchantBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final CartIconView btnCart;

  @NonNull
  public final ImageView btnMap;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final View costLine;

  @NonNull
  public final TextViewSFProDisplayMedium costText;

  @NonNull
  public final TextViewSFProDisplayMedium estimatedText;

  @NonNull
  public final ImageView foodBook;

  @NonNull
  public final TextView hours;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView kategoridistance;

  @NonNull
  public final LinearLayout layoutMerchantDescription;

  @NonNull
  public final LinearLayout layoutPartnerMerchant;

  @NonNull
  public final LinearLayout lldetail;

  @NonNull
  public final LinearLayout lllogo;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView nama;

  @NonNull
  public final ImageView nodataimage;

  @NonNull
  public final ImageView partnerMerchant;

  @NonNull
  public final CardView priceContainer;

  @NonNull
  public final CircleImageView profileimage;

  @NonNull
  public final ImageView promoMerchant;

  @NonNull
  public final TextViewSFProDisplayMedium qtyText;

  @NonNull
  public final RelativeLayout rlnodata;

  @NonNull
  public final RelativeLayout rlprogress;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView textnotif;

  @NonNull
  public final TextViewSFProDisplayRegular textprogress;

  @NonNull
  public final TextViewSFProDisplayMedium tutup;

  @NonNull
  public final TextView tvAboutMerchant;

  @NonNull
  public final TextView tvMerchantLocation;

  @NonNull
  public final TextView tvServiceChargeVat;

  @NonNull
  public final TextView tvToolbarTitle;

  @NonNull
  public final ViewPager viewPager;

  private ActivityNewDetailMerchantBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView backBtn, @NonNull CartIconView btnCart,
      @NonNull ImageView btnMap, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull View costLine, @NonNull TextViewSFProDisplayMedium costText,
      @NonNull TextViewSFProDisplayMedium estimatedText, @NonNull ImageView foodBook,
      @NonNull TextView hours, @NonNull ImageView image, @NonNull TextView kategoridistance,
      @NonNull LinearLayout layoutMerchantDescription, @NonNull LinearLayout layoutPartnerMerchant,
      @NonNull LinearLayout lldetail, @NonNull LinearLayout lllogo, @NonNull ImageView logo,
      @NonNull TextView nama, @NonNull ImageView nodataimage, @NonNull ImageView partnerMerchant,
      @NonNull CardView priceContainer, @NonNull CircleImageView profileimage,
      @NonNull ImageView promoMerchant, @NonNull TextViewSFProDisplayMedium qtyText,
      @NonNull RelativeLayout rlnodata, @NonNull RelativeLayout rlprogress,
      @NonNull TabLayout tabLayout, @NonNull TextView textnotif,
      @NonNull TextViewSFProDisplayRegular textprogress, @NonNull TextViewSFProDisplayMedium tutup,
      @NonNull TextView tvAboutMerchant, @NonNull TextView tvMerchantLocation,
      @NonNull TextView tvServiceChargeVat, @NonNull TextView tvToolbarTitle,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.backBtn = backBtn;
    this.btnCart = btnCart;
    this.btnMap = btnMap;
    this.collapsingToolbar = collapsingToolbar;
    this.costLine = costLine;
    this.costText = costText;
    this.estimatedText = estimatedText;
    this.foodBook = foodBook;
    this.hours = hours;
    this.image = image;
    this.kategoridistance = kategoridistance;
    this.layoutMerchantDescription = layoutMerchantDescription;
    this.layoutPartnerMerchant = layoutPartnerMerchant;
    this.lldetail = lldetail;
    this.lllogo = lllogo;
    this.logo = logo;
    this.nama = nama;
    this.nodataimage = nodataimage;
    this.partnerMerchant = partnerMerchant;
    this.priceContainer = priceContainer;
    this.profileimage = profileimage;
    this.promoMerchant = promoMerchant;
    this.qtyText = qtyText;
    this.rlnodata = rlnodata;
    this.rlprogress = rlprogress;
    this.tabLayout = tabLayout;
    this.textnotif = textnotif;
    this.textprogress = textprogress;
    this.tutup = tutup;
    this.tvAboutMerchant = tvAboutMerchant;
    this.tvMerchantLocation = tvMerchantLocation;
    this.tvServiceChargeVat = tvServiceChargeVat;
    this.tvToolbarTitle = tvToolbarTitle;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewDetailMerchantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewDetailMerchantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_detail_merchant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewDetailMerchantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.btn_cart;
      CartIconView btnCart = rootView.findViewById(id);
      if (btnCart == null) {
        break missingId;
      }

      id = R.id.btnMap;
      ImageView btnMap = rootView.findViewById(id);
      if (btnMap == null) {
        break missingId;
      }

      id = R.id.collapsingToolbar;
      CollapsingToolbarLayout collapsingToolbar = rootView.findViewById(id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.cost_line;
      View costLine = rootView.findViewById(id);
      if (costLine == null) {
        break missingId;
      }

      id = R.id.cost_text;
      TextViewSFProDisplayMedium costText = rootView.findViewById(id);
      if (costText == null) {
        break missingId;
      }

      id = R.id.estimated_text;
      TextViewSFProDisplayMedium estimatedText = rootView.findViewById(id);
      if (estimatedText == null) {
        break missingId;
      }

      id = R.id.food_book;
      ImageView foodBook = rootView.findViewById(id);
      if (foodBook == null) {
        break missingId;
      }

      id = R.id.hours;
      TextView hours = rootView.findViewById(id);
      if (hours == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.kategoridistance;
      TextView kategoridistance = rootView.findViewById(id);
      if (kategoridistance == null) {
        break missingId;
      }

      id = R.id.layoutMerchantDescription;
      LinearLayout layoutMerchantDescription = rootView.findViewById(id);
      if (layoutMerchantDescription == null) {
        break missingId;
      }

      id = R.id.layoutPartnerMerchant;
      LinearLayout layoutPartnerMerchant = rootView.findViewById(id);
      if (layoutPartnerMerchant == null) {
        break missingId;
      }

      id = R.id.lldetail;
      LinearLayout lldetail = rootView.findViewById(id);
      if (lldetail == null) {
        break missingId;
      }

      id = R.id.lllogo;
      LinearLayout lllogo = rootView.findViewById(id);
      if (lllogo == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = rootView.findViewById(id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.nama;
      TextView nama = rootView.findViewById(id);
      if (nama == null) {
        break missingId;
      }

      id = R.id.nodataimage;
      ImageView nodataimage = rootView.findViewById(id);
      if (nodataimage == null) {
        break missingId;
      }

      id = R.id.partner_merchant;
      ImageView partnerMerchant = rootView.findViewById(id);
      if (partnerMerchant == null) {
        break missingId;
      }

      id = R.id.price_container;
      CardView priceContainer = rootView.findViewById(id);
      if (priceContainer == null) {
        break missingId;
      }

      id = R.id.profileimage;
      CircleImageView profileimage = rootView.findViewById(id);
      if (profileimage == null) {
        break missingId;
      }

      id = R.id.promo_merchant;
      ImageView promoMerchant = rootView.findViewById(id);
      if (promoMerchant == null) {
        break missingId;
      }

      id = R.id.qty_text;
      TextViewSFProDisplayMedium qtyText = rootView.findViewById(id);
      if (qtyText == null) {
        break missingId;
      }

      id = R.id.rlnodata;
      RelativeLayout rlnodata = rootView.findViewById(id);
      if (rlnodata == null) {
        break missingId;
      }

      id = R.id.rlprogress;
      RelativeLayout rlprogress = rootView.findViewById(id);
      if (rlprogress == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = rootView.findViewById(id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.textnotif;
      TextView textnotif = rootView.findViewById(id);
      if (textnotif == null) {
        break missingId;
      }

      id = R.id.textprogress;
      TextViewSFProDisplayRegular textprogress = rootView.findViewById(id);
      if (textprogress == null) {
        break missingId;
      }

      id = R.id.tutup;
      TextViewSFProDisplayMedium tutup = rootView.findViewById(id);
      if (tutup == null) {
        break missingId;
      }

      id = R.id.tvAboutMerchant;
      TextView tvAboutMerchant = rootView.findViewById(id);
      if (tvAboutMerchant == null) {
        break missingId;
      }

      id = R.id.tvMerchantLocation;
      TextView tvMerchantLocation = rootView.findViewById(id);
      if (tvMerchantLocation == null) {
        break missingId;
      }

      id = R.id.tvServiceChargeVat;
      TextView tvServiceChargeVat = rootView.findViewById(id);
      if (tvServiceChargeVat == null) {
        break missingId;
      }

      id = R.id.tvToolbarTitle;
      TextView tvToolbarTitle = rootView.findViewById(id);
      if (tvToolbarTitle == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityNewDetailMerchantBinding((CoordinatorLayout) rootView, appBarLayout,
          backBtn, btnCart, btnMap, collapsingToolbar, costLine, costText, estimatedText, foodBook,
          hours, image, kategoridistance, layoutMerchantDescription, layoutPartnerMerchant,
          lldetail, lllogo, logo, nama, nodataimage, partnerMerchant, priceContainer, profileimage,
          promoMerchant, qtyText, rlnodata, rlprogress, tabLayout, textnotif, textprogress, tutup,
          tvAboutMerchant, tvMerchantLocation, tvServiceChargeVat, tvToolbarTitle, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
