// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import customfonts.Button_SF_Pro_Display_Medium;
import customfonts.EditTextSFProDisplayMedium;
import customfonts.TextViewSFProDisplayMedium;
import customfonts.TextViewSFProDisplayRegular;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewRideBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final ImageView background;

  @NonNull
  public final ImageView backgroundstripe;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final Button_SF_Pro_Display_Medium btnpromo;

  @NonNull
  public final TextViewSFProDisplayMedium cashPayment;

  @NonNull
  public final ImageView chat;

  @NonNull
  public final ImageButton checkedcash;

  @NonNull
  public final ImageButton checkedwallet;

  @NonNull
  public final TextViewSFProDisplayRegular cost;

  @NonNull
  public final TextViewSFProDisplayRegular costText;

  @NonNull
  public final Button_SF_Pro_Display_Medium destinationButton;

  @NonNull
  public final LinearLayout destinationContainer;

  @NonNull
  public final TextViewSFProDisplayRegular destinationText;

  @NonNull
  public final LinearLayout detail;

  @NonNull
  public final TextViewSFProDisplayRegular diskon;

  @NonNull
  public final TextViewSFProDisplayRegular distance;

  @NonNull
  public final TextViewSFProDisplayRegular fitur;

  @NonNull
  public final View idswipe;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextViewSFProDisplayRegular ketsaldo;

  @NonNull
  public final TextViewSFProDisplayMedium layanan;

  @NonNull
  public final RelativeLayout layananall;

  @NonNull
  public final TextViewSFProDisplayRegular layanandes;

  @NonNull
  public final LinearLayout llchat;

  @NonNull
  public final LinearLayout llcheckedcash;

  @NonNull
  public final LinearLayout llcheckedwallet;

  @NonNull
  public final LinearLayout lldestination;

  @NonNull
  public final LinearLayout lldistance;

  @NonNull
  public final LinearLayout llestimated;

  @NonNull
  public final LinearLayout lllayananall;

  @NonNull
  public final LinearLayout lllogo;

  @NonNull
  public final LinearLayout llpayment;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final LinearLayout merchantdetail;

  @NonNull
  public final RecyclerView merchantnear;

  @NonNull
  public final Button_SF_Pro_Display_Medium order;

  @NonNull
  public final ImageView phonenumber;

  @NonNull
  public final Button_SF_Pro_Display_Medium pickUpButton;

  @NonNull
  public final LinearLayout pickUpContainer;

  @NonNull
  public final TextViewSFProDisplayRegular pickUpText;

  @NonNull
  public final TextViewSFProDisplayMedium price;

  @NonNull
  public final TextViewSFProDisplayRegular produk;

  @NonNull
  public final CircleImageView profileimage;

  @NonNull
  public final EditTextSFProDisplayMedium promocode;

  @NonNull
  public final TextViewSFProDisplayMedium promonotif;

  @NonNull
  public final TextViewSFProDisplayRegular receivername;

  @NonNull
  public final Button_SF_Pro_Display_Medium receiverphone;

  @NonNull
  public final RelativeLayout rlayout;

  @NonNull
  public final RelativeLayout rlayoutstripe;

  @NonNull
  public final RelativeLayout rlnotif;

  @NonNull
  public final RelativeLayout rlprogress;

  @NonNull
  public final TextViewSFProDisplayMedium saldo;

  @NonNull
  public final LinearLayout senddetail;

  @NonNull
  public final TextViewSFProDisplayRegular sendername;

  @NonNull
  public final Button_SF_Pro_Display_Medium senderphone;

  @NonNull
  public final Space space;

  @NonNull
  public final TextViewSFProDisplayMedium status;

  @NonNull
  public final TextViewSFProDisplayRegular textnotif;

  @NonNull
  public final TextViewSFProDisplayRegular textprogress;

  @NonNull
  public final TextViewSFProDisplayRegular time;

  @NonNull
  public final TextViewSFProDisplayMedium topUp;

  @NonNull
  public final TextViewSFProDisplayMedium totaltext;

  @NonNull
  public final TextViewSFProDisplayMedium walletpayment;

  private ActivityNewRideBinding(@NonNull CoordinatorLayout rootView, @NonNull ImageView backBtn,
      @NonNull ImageView background, @NonNull ImageView backgroundstripe,
      @NonNull LinearLayout bottomSheet, @NonNull Button_SF_Pro_Display_Medium btnpromo,
      @NonNull TextViewSFProDisplayMedium cashPayment, @NonNull ImageView chat,
      @NonNull ImageButton checkedcash, @NonNull ImageButton checkedwallet,
      @NonNull TextViewSFProDisplayRegular cost, @NonNull TextViewSFProDisplayRegular costText,
      @NonNull Button_SF_Pro_Display_Medium destinationButton,
      @NonNull LinearLayout destinationContainer,
      @NonNull TextViewSFProDisplayRegular destinationText, @NonNull LinearLayout detail,
      @NonNull TextViewSFProDisplayRegular diskon, @NonNull TextViewSFProDisplayRegular distance,
      @NonNull TextViewSFProDisplayRegular fitur, @NonNull View idswipe, @NonNull ImageView image,
      @NonNull TextViewSFProDisplayRegular ketsaldo, @NonNull TextViewSFProDisplayMedium layanan,
      @NonNull RelativeLayout layananall, @NonNull TextViewSFProDisplayRegular layanandes,
      @NonNull LinearLayout llchat, @NonNull LinearLayout llcheckedcash,
      @NonNull LinearLayout llcheckedwallet, @NonNull LinearLayout lldestination,
      @NonNull LinearLayout lldistance, @NonNull LinearLayout llestimated,
      @NonNull LinearLayout lllayananall, @NonNull LinearLayout lllogo,
      @NonNull LinearLayout llpayment, @NonNull ImageView logo,
      @NonNull LinearLayout merchantdetail, @NonNull RecyclerView merchantnear,
      @NonNull Button_SF_Pro_Display_Medium order, @NonNull ImageView phonenumber,
      @NonNull Button_SF_Pro_Display_Medium pickUpButton, @NonNull LinearLayout pickUpContainer,
      @NonNull TextViewSFProDisplayRegular pickUpText, @NonNull TextViewSFProDisplayMedium price,
      @NonNull TextViewSFProDisplayRegular produk, @NonNull CircleImageView profileimage,
      @NonNull EditTextSFProDisplayMedium promocode, @NonNull TextViewSFProDisplayMedium promonotif,
      @NonNull TextViewSFProDisplayRegular receivername,
      @NonNull Button_SF_Pro_Display_Medium receiverphone, @NonNull RelativeLayout rlayout,
      @NonNull RelativeLayout rlayoutstripe, @NonNull RelativeLayout rlnotif,
      @NonNull RelativeLayout rlprogress, @NonNull TextViewSFProDisplayMedium saldo,
      @NonNull LinearLayout senddetail, @NonNull TextViewSFProDisplayRegular sendername,
      @NonNull Button_SF_Pro_Display_Medium senderphone, @NonNull Space space,
      @NonNull TextViewSFProDisplayMedium status, @NonNull TextViewSFProDisplayRegular textnotif,
      @NonNull TextViewSFProDisplayRegular textprogress, @NonNull TextViewSFProDisplayRegular time,
      @NonNull TextViewSFProDisplayMedium topUp, @NonNull TextViewSFProDisplayMedium totaltext,
      @NonNull TextViewSFProDisplayMedium walletpayment) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.background = background;
    this.backgroundstripe = backgroundstripe;
    this.bottomSheet = bottomSheet;
    this.btnpromo = btnpromo;
    this.cashPayment = cashPayment;
    this.chat = chat;
    this.checkedcash = checkedcash;
    this.checkedwallet = checkedwallet;
    this.cost = cost;
    this.costText = costText;
    this.destinationButton = destinationButton;
    this.destinationContainer = destinationContainer;
    this.destinationText = destinationText;
    this.detail = detail;
    this.diskon = diskon;
    this.distance = distance;
    this.fitur = fitur;
    this.idswipe = idswipe;
    this.image = image;
    this.ketsaldo = ketsaldo;
    this.layanan = layanan;
    this.layananall = layananall;
    this.layanandes = layanandes;
    this.llchat = llchat;
    this.llcheckedcash = llcheckedcash;
    this.llcheckedwallet = llcheckedwallet;
    this.lldestination = lldestination;
    this.lldistance = lldistance;
    this.llestimated = llestimated;
    this.lllayananall = lllayananall;
    this.lllogo = lllogo;
    this.llpayment = llpayment;
    this.logo = logo;
    this.merchantdetail = merchantdetail;
    this.merchantnear = merchantnear;
    this.order = order;
    this.phonenumber = phonenumber;
    this.pickUpButton = pickUpButton;
    this.pickUpContainer = pickUpContainer;
    this.pickUpText = pickUpText;
    this.price = price;
    this.produk = produk;
    this.profileimage = profileimage;
    this.promocode = promocode;
    this.promonotif = promonotif;
    this.receivername = receivername;
    this.receiverphone = receiverphone;
    this.rlayout = rlayout;
    this.rlayoutstripe = rlayoutstripe;
    this.rlnotif = rlnotif;
    this.rlprogress = rlprogress;
    this.saldo = saldo;
    this.senddetail = senddetail;
    this.sendername = sendername;
    this.senderphone = senderphone;
    this.space = space;
    this.status = status;
    this.textnotif = textnotif;
    this.textprogress = textprogress;
    this.time = time;
    this.topUp = topUp;
    this.totaltext = totaltext;
    this.walletpayment = walletpayment;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewRideBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewRideBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_ride, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewRideBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.background;
      ImageView background = rootView.findViewById(id);
      if (background == null) {
        break missingId;
      }

      id = R.id.backgroundstripe;
      ImageView backgroundstripe = rootView.findViewById(id);
      if (backgroundstripe == null) {
        break missingId;
      }

      id = R.id.bottomSheet;
      LinearLayout bottomSheet = rootView.findViewById(id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.btnpromo;
      Button_SF_Pro_Display_Medium btnpromo = rootView.findViewById(id);
      if (btnpromo == null) {
        break missingId;
      }

      id = R.id.cashPayment;
      TextViewSFProDisplayMedium cashPayment = rootView.findViewById(id);
      if (cashPayment == null) {
        break missingId;
      }

      id = R.id.chat;
      ImageView chat = rootView.findViewById(id);
      if (chat == null) {
        break missingId;
      }

      id = R.id.checkedcash;
      ImageButton checkedcash = rootView.findViewById(id);
      if (checkedcash == null) {
        break missingId;
      }

      id = R.id.checkedwallet;
      ImageButton checkedwallet = rootView.findViewById(id);
      if (checkedwallet == null) {
        break missingId;
      }

      id = R.id.cost;
      TextViewSFProDisplayRegular cost = rootView.findViewById(id);
      if (cost == null) {
        break missingId;
      }

      id = R.id.cost_text;
      TextViewSFProDisplayRegular costText = rootView.findViewById(id);
      if (costText == null) {
        break missingId;
      }

      id = R.id.destinationButton;
      Button_SF_Pro_Display_Medium destinationButton = rootView.findViewById(id);
      if (destinationButton == null) {
        break missingId;
      }

      id = R.id.destinationContainer;
      LinearLayout destinationContainer = rootView.findViewById(id);
      if (destinationContainer == null) {
        break missingId;
      }

      id = R.id.destinationText;
      TextViewSFProDisplayRegular destinationText = rootView.findViewById(id);
      if (destinationText == null) {
        break missingId;
      }

      id = R.id.detail;
      LinearLayout detail = rootView.findViewById(id);
      if (detail == null) {
        break missingId;
      }

      id = R.id.diskon;
      TextViewSFProDisplayRegular diskon = rootView.findViewById(id);
      if (diskon == null) {
        break missingId;
      }

      id = R.id.distance;
      TextViewSFProDisplayRegular distance = rootView.findViewById(id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.fitur;
      TextViewSFProDisplayRegular fitur = rootView.findViewById(id);
      if (fitur == null) {
        break missingId;
      }

      id = R.id.idswipe;
      View idswipe = rootView.findViewById(id);
      if (idswipe == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.ketsaldo;
      TextViewSFProDisplayRegular ketsaldo = rootView.findViewById(id);
      if (ketsaldo == null) {
        break missingId;
      }

      id = R.id.layanan;
      TextViewSFProDisplayMedium layanan = rootView.findViewById(id);
      if (layanan == null) {
        break missingId;
      }

      id = R.id.layananall;
      RelativeLayout layananall = rootView.findViewById(id);
      if (layananall == null) {
        break missingId;
      }

      id = R.id.layanandes;
      TextViewSFProDisplayRegular layanandes = rootView.findViewById(id);
      if (layanandes == null) {
        break missingId;
      }

      id = R.id.llchat;
      LinearLayout llchat = rootView.findViewById(id);
      if (llchat == null) {
        break missingId;
      }

      id = R.id.llcheckedcash;
      LinearLayout llcheckedcash = rootView.findViewById(id);
      if (llcheckedcash == null) {
        break missingId;
      }

      id = R.id.llcheckedwallet;
      LinearLayout llcheckedwallet = rootView.findViewById(id);
      if (llcheckedwallet == null) {
        break missingId;
      }

      id = R.id.lldestination;
      LinearLayout lldestination = rootView.findViewById(id);
      if (lldestination == null) {
        break missingId;
      }

      id = R.id.lldistance;
      LinearLayout lldistance = rootView.findViewById(id);
      if (lldistance == null) {
        break missingId;
      }

      id = R.id.llestimated;
      LinearLayout llestimated = rootView.findViewById(id);
      if (llestimated == null) {
        break missingId;
      }

      id = R.id.lllayananall;
      LinearLayout lllayananall = rootView.findViewById(id);
      if (lllayananall == null) {
        break missingId;
      }

      id = R.id.lllogo;
      LinearLayout lllogo = rootView.findViewById(id);
      if (lllogo == null) {
        break missingId;
      }

      id = R.id.llpayment;
      LinearLayout llpayment = rootView.findViewById(id);
      if (llpayment == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = rootView.findViewById(id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.merchantdetail;
      LinearLayout merchantdetail = rootView.findViewById(id);
      if (merchantdetail == null) {
        break missingId;
      }

      id = R.id.merchantnear;
      RecyclerView merchantnear = rootView.findViewById(id);
      if (merchantnear == null) {
        break missingId;
      }

      id = R.id.order;
      Button_SF_Pro_Display_Medium order = rootView.findViewById(id);
      if (order == null) {
        break missingId;
      }

      id = R.id.phonenumber;
      ImageView phonenumber = rootView.findViewById(id);
      if (phonenumber == null) {
        break missingId;
      }

      id = R.id.pickUpButton;
      Button_SF_Pro_Display_Medium pickUpButton = rootView.findViewById(id);
      if (pickUpButton == null) {
        break missingId;
      }

      id = R.id.pickUpContainer;
      LinearLayout pickUpContainer = rootView.findViewById(id);
      if (pickUpContainer == null) {
        break missingId;
      }

      id = R.id.pickUpText;
      TextViewSFProDisplayRegular pickUpText = rootView.findViewById(id);
      if (pickUpText == null) {
        break missingId;
      }

      id = R.id.price;
      TextViewSFProDisplayMedium price = rootView.findViewById(id);
      if (price == null) {
        break missingId;
      }

      id = R.id.produk;
      TextViewSFProDisplayRegular produk = rootView.findViewById(id);
      if (produk == null) {
        break missingId;
      }

      id = R.id.profileimage;
      CircleImageView profileimage = rootView.findViewById(id);
      if (profileimage == null) {
        break missingId;
      }

      id = R.id.promocode;
      EditTextSFProDisplayMedium promocode = rootView.findViewById(id);
      if (promocode == null) {
        break missingId;
      }

      id = R.id.promonotif;
      TextViewSFProDisplayMedium promonotif = rootView.findViewById(id);
      if (promonotif == null) {
        break missingId;
      }

      id = R.id.receivername;
      TextViewSFProDisplayRegular receivername = rootView.findViewById(id);
      if (receivername == null) {
        break missingId;
      }

      id = R.id.receiverphone;
      Button_SF_Pro_Display_Medium receiverphone = rootView.findViewById(id);
      if (receiverphone == null) {
        break missingId;
      }

      id = R.id.rlayout;
      RelativeLayout rlayout = rootView.findViewById(id);
      if (rlayout == null) {
        break missingId;
      }

      id = R.id.rlayoutstripe;
      RelativeLayout rlayoutstripe = rootView.findViewById(id);
      if (rlayoutstripe == null) {
        break missingId;
      }

      id = R.id.rlnotif;
      RelativeLayout rlnotif = rootView.findViewById(id);
      if (rlnotif == null) {
        break missingId;
      }

      id = R.id.rlprogress;
      RelativeLayout rlprogress = rootView.findViewById(id);
      if (rlprogress == null) {
        break missingId;
      }

      id = R.id.saldo;
      TextViewSFProDisplayMedium saldo = rootView.findViewById(id);
      if (saldo == null) {
        break missingId;
      }

      id = R.id.senddetail;
      LinearLayout senddetail = rootView.findViewById(id);
      if (senddetail == null) {
        break missingId;
      }

      id = R.id.sendername;
      TextViewSFProDisplayRegular sendername = rootView.findViewById(id);
      if (sendername == null) {
        break missingId;
      }

      id = R.id.senderphone;
      Button_SF_Pro_Display_Medium senderphone = rootView.findViewById(id);
      if (senderphone == null) {
        break missingId;
      }

      id = R.id.space;
      Space space = rootView.findViewById(id);
      if (space == null) {
        break missingId;
      }

      id = R.id.status;
      TextViewSFProDisplayMedium status = rootView.findViewById(id);
      if (status == null) {
        break missingId;
      }

      id = R.id.textnotif;
      TextViewSFProDisplayRegular textnotif = rootView.findViewById(id);
      if (textnotif == null) {
        break missingId;
      }

      id = R.id.textprogress;
      TextViewSFProDisplayRegular textprogress = rootView.findViewById(id);
      if (textprogress == null) {
        break missingId;
      }

      id = R.id.time;
      TextViewSFProDisplayRegular time = rootView.findViewById(id);
      if (time == null) {
        break missingId;
      }

      id = R.id.topUp;
      TextViewSFProDisplayMedium topUp = rootView.findViewById(id);
      if (topUp == null) {
        break missingId;
      }

      id = R.id.totaltext;
      TextViewSFProDisplayMedium totaltext = rootView.findViewById(id);
      if (totaltext == null) {
        break missingId;
      }

      id = R.id.walletpayment;
      TextViewSFProDisplayMedium walletpayment = rootView.findViewById(id);
      if (walletpayment == null) {
        break missingId;
      }

      return new ActivityNewRideBinding((CoordinatorLayout) rootView, backBtn, background,
          backgroundstripe, bottomSheet, btnpromo, cashPayment, chat, checkedcash, checkedwallet,
          cost, costText, destinationButton, destinationContainer, destinationText, detail, diskon,
          distance, fitur, idswipe, image, ketsaldo, layanan, layananall, layanandes, llchat,
          llcheckedcash, llcheckedwallet, lldestination, lldistance, llestimated, lllayananall,
          lllogo, llpayment, logo, merchantdetail, merchantnear, order, phonenumber, pickUpButton,
          pickUpContainer, pickUpText, price, produk, profileimage, promocode, promonotif,
          receivername, receiverphone, rlayout, rlayoutstripe, rlnotif, rlprogress, saldo,
          senddetail, sendername, senderphone, space, status, textnotif, textprogress, time, topUp,
          totaltext, walletpayment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
