// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchCompat allNotificationSwitch;

  @NonNull
  public final Toolbar appBarLayout;

  @NonNull
  public final ImageView backBtnVerify;

  @NonNull
  public final SwitchCompat promotionAndOfferSwitch;

  @NonNull
  public final SwitchCompat pushNotificationSwitch;

  private ActivityNotificationSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull SwitchCompat allNotificationSwitch, @NonNull Toolbar appBarLayout,
      @NonNull ImageView backBtnVerify, @NonNull SwitchCompat promotionAndOfferSwitch,
      @NonNull SwitchCompat pushNotificationSwitch) {
    this.rootView = rootView;
    this.allNotificationSwitch = allNotificationSwitch;
    this.appBarLayout = appBarLayout;
    this.backBtnVerify = backBtnVerify;
    this.promotionAndOfferSwitch = promotionAndOfferSwitch;
    this.pushNotificationSwitch = pushNotificationSwitch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allNotificationSwitch;
      SwitchCompat allNotificationSwitch = rootView.findViewById(id);
      if (allNotificationSwitch == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      Toolbar appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.back_btn_verify;
      ImageView backBtnVerify = rootView.findViewById(id);
      if (backBtnVerify == null) {
        break missingId;
      }

      id = R.id.promotionAndOfferSwitch;
      SwitchCompat promotionAndOfferSwitch = rootView.findViewById(id);
      if (promotionAndOfferSwitch == null) {
        break missingId;
      }

      id = R.id.pushNotificationSwitch;
      SwitchCompat pushNotificationSwitch = rootView.findViewById(id);
      if (pushNotificationSwitch == null) {
        break missingId;
      }

      return new ActivityNotificationSettingsBinding((ConstraintLayout) rootView,
          allNotificationSwitch, appBarLayout, backBtnVerify, promotionAndOfferSwitch,
          pushNotificationSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
