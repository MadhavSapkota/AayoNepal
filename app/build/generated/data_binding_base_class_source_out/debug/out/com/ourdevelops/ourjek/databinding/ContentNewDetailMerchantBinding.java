// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import com.ourdevelops.ourjek.R;
import customfonts.TextViewSFProDisplayMedium;
import customfonts.TextViewSFProDisplayRegular;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentNewDetailMerchantBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View costLine;

  @NonNull
  public final TextViewSFProDisplayMedium costText;

  @NonNull
  public final TextViewSFProDisplayMedium estimatedText;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final ImageView foodBook;

  @NonNull
  public final ImageView nodataimage;

  @NonNull
  public final CardView priceContainer;

  @NonNull
  public final TextViewSFProDisplayMedium qtyText;

  @NonNull
  public final RelativeLayout rlnodata;

  @NonNull
  public final FrameLayout rlnotif;

  @NonNull
  public final LinearLayout shimlistcatnear;

  @NonNull
  public final LinearLayout shimlistnear;

  @NonNull
  public final ShimmerFrameLayout shimmerchantnear;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextViewSFProDisplayRegular textnotif;

  @NonNull
  public final ViewPager viewPager;

  private ContentNewDetailMerchantBinding(@NonNull RelativeLayout rootView, @NonNull View costLine,
      @NonNull TextViewSFProDisplayMedium costText,
      @NonNull TextViewSFProDisplayMedium estimatedText, @NonNull FloatingActionButton fab,
      @NonNull ImageView foodBook, @NonNull ImageView nodataimage, @NonNull CardView priceContainer,
      @NonNull TextViewSFProDisplayMedium qtyText, @NonNull RelativeLayout rlnodata,
      @NonNull FrameLayout rlnotif, @NonNull LinearLayout shimlistcatnear,
      @NonNull LinearLayout shimlistnear, @NonNull ShimmerFrameLayout shimmerchantnear,
      @NonNull TabLayout tabLayout, @NonNull TextViewSFProDisplayRegular textnotif,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.costLine = costLine;
    this.costText = costText;
    this.estimatedText = estimatedText;
    this.fab = fab;
    this.foodBook = foodBook;
    this.nodataimage = nodataimage;
    this.priceContainer = priceContainer;
    this.qtyText = qtyText;
    this.rlnodata = rlnodata;
    this.rlnotif = rlnotif;
    this.shimlistcatnear = shimlistcatnear;
    this.shimlistnear = shimlistnear;
    this.shimmerchantnear = shimmerchantnear;
    this.tabLayout = tabLayout;
    this.textnotif = textnotif;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentNewDetailMerchantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentNewDetailMerchantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_new_detail_merchant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentNewDetailMerchantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cost_line;
      View costLine = rootView.findViewById(id);
      if (costLine == null) {
        break missingId;
      }

      id = R.id.cost_text;
      TextViewSFProDisplayMedium costText = rootView.findViewById(id);
      if (costText == null) {
        break missingId;
      }

      id = R.id.estimated_text;
      TextViewSFProDisplayMedium estimatedText = rootView.findViewById(id);
      if (estimatedText == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = rootView.findViewById(id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.food_book;
      ImageView foodBook = rootView.findViewById(id);
      if (foodBook == null) {
        break missingId;
      }

      id = R.id.nodataimage;
      ImageView nodataimage = rootView.findViewById(id);
      if (nodataimage == null) {
        break missingId;
      }

      id = R.id.price_container;
      CardView priceContainer = rootView.findViewById(id);
      if (priceContainer == null) {
        break missingId;
      }

      id = R.id.qty_text;
      TextViewSFProDisplayMedium qtyText = rootView.findViewById(id);
      if (qtyText == null) {
        break missingId;
      }

      id = R.id.rlnodata;
      RelativeLayout rlnodata = rootView.findViewById(id);
      if (rlnodata == null) {
        break missingId;
      }

      id = R.id.rlnotif;
      FrameLayout rlnotif = rootView.findViewById(id);
      if (rlnotif == null) {
        break missingId;
      }

      id = R.id.shimlistcatnear;
      LinearLayout shimlistcatnear = rootView.findViewById(id);
      if (shimlistcatnear == null) {
        break missingId;
      }

      id = R.id.shimlistnear;
      LinearLayout shimlistnear = rootView.findViewById(id);
      if (shimlistnear == null) {
        break missingId;
      }

      id = R.id.shimmerchantnear;
      ShimmerFrameLayout shimmerchantnear = rootView.findViewById(id);
      if (shimmerchantnear == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = rootView.findViewById(id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.textnotif;
      TextViewSFProDisplayRegular textnotif = rootView.findViewById(id);
      if (textnotif == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ContentNewDetailMerchantBinding((RelativeLayout) rootView, costLine, costText,
          estimatedText, fab, foodBook, nodataimage, priceContainer, qtyText, rlnodata, rlnotif,
          shimlistcatnear, shimlistnear, shimmerchantnear, tabLayout, textnotif, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
