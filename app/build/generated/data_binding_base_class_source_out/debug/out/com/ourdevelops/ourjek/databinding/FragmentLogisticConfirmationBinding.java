// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogisticConfirmationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final ImageView destinationImg;

  @NonNull
  public final LinearLayout layoutRideConfirmation;

  @NonNull
  public final ImageView pickUpImg;

  @NonNull
  public final TextView tvDestinationLocation;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvPickupLocation;

  private FragmentLogisticConfirmationBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnNext, @NonNull ImageView destinationImg,
      @NonNull LinearLayout layoutRideConfirmation, @NonNull ImageView pickUpImg,
      @NonNull TextView tvDestinationLocation, @NonNull TextView tvDistance,
      @NonNull TextView tvPickupLocation) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.destinationImg = destinationImg;
    this.layoutRideConfirmation = layoutRideConfirmation;
    this.pickUpImg = pickUpImg;
    this.tvDestinationLocation = tvDestinationLocation;
    this.tvDistance = tvDistance;
    this.tvPickupLocation = tvPickupLocation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogisticConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogisticConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_logistic_confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogisticConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      Button btnNext = rootView.findViewById(id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.destinationImg;
      ImageView destinationImg = rootView.findViewById(id);
      if (destinationImg == null) {
        break missingId;
      }

      LinearLayout layoutRideConfirmation = (LinearLayout) rootView;

      id = R.id.pickUpImg;
      ImageView pickUpImg = rootView.findViewById(id);
      if (pickUpImg == null) {
        break missingId;
      }

      id = R.id.tvDestinationLocation;
      TextView tvDestinationLocation = rootView.findViewById(id);
      if (tvDestinationLocation == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = rootView.findViewById(id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvPickupLocation;
      TextView tvPickupLocation = rootView.findViewById(id);
      if (tvPickupLocation == null) {
        break missingId;
      }

      return new FragmentLogisticConfirmationBinding((LinearLayout) rootView, btnNext,
          destinationImg, layoutRideConfirmation, pickUpImg, tvDestinationLocation, tvDistance,
          tvPickupLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
