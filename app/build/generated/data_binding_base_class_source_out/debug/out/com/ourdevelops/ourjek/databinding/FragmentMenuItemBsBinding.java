// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.cepheuen.elegantnumberbutton.view.ElegantNumberButton;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMenuItemBsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView btnAddToCart;

  @NonNull
  public final EditText etNotes;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final ElegantNumberButton quantityPicker;

  @NonNull
  public final TextView tvDetails;

  @NonNull
  public final TextView tvMainPrice;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTitle;

  private FragmentMenuItemBsBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView btnAddToCart, @NonNull EditText etNotes, @NonNull LinearLayout layout,
      @NonNull ElegantNumberButton quantityPicker, @NonNull TextView tvDetails,
      @NonNull TextView tvMainPrice, @NonNull TextView tvPrice, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnAddToCart = btnAddToCart;
    this.etNotes = etNotes;
    this.layout = layout;
    this.quantityPicker = quantityPicker;
    this.tvDetails = tvDetails;
    this.tvMainPrice = tvMainPrice;
    this.tvPrice = tvPrice;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMenuItemBsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMenuItemBsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_menu_item_bs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMenuItemBsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddToCart;
      CardView btnAddToCart = rootView.findViewById(id);
      if (btnAddToCart == null) {
        break missingId;
      }

      id = R.id.etNotes;
      EditText etNotes = rootView.findViewById(id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = rootView.findViewById(id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.quantityPicker;
      ElegantNumberButton quantityPicker = rootView.findViewById(id);
      if (quantityPicker == null) {
        break missingId;
      }

      id = R.id.tvDetails;
      TextView tvDetails = rootView.findViewById(id);
      if (tvDetails == null) {
        break missingId;
      }

      id = R.id.tvMainPrice;
      TextView tvMainPrice = rootView.findViewById(id);
      if (tvMainPrice == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = rootView.findViewById(id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentMenuItemBsBinding((RelativeLayout) rootView, btnAddToCart, etNotes, layout,
          quantityPicker, tvDetails, tvMainPrice, tvPrice, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
