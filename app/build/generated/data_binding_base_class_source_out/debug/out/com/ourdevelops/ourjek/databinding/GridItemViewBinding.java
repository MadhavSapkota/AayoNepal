// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GridItemViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView gridCaption;

  @NonNull
  public final TextView gridHeading;

  @NonNull
  public final CardView gridItem;

  @NonNull
  public final CircleImageView iconRestaurant;

  @NonNull
  public final ImageView imageGrid;

  private GridItemViewBinding(@NonNull RelativeLayout rootView, @NonNull TextView gridCaption,
      @NonNull TextView gridHeading, @NonNull CardView gridItem,
      @NonNull CircleImageView iconRestaurant, @NonNull ImageView imageGrid) {
    this.rootView = rootView;
    this.gridCaption = gridCaption;
    this.gridHeading = gridHeading;
    this.gridItem = gridItem;
    this.iconRestaurant = iconRestaurant;
    this.imageGrid = imageGrid;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GridItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GridItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.grid_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GridItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gridCaption;
      TextView gridCaption = rootView.findViewById(id);
      if (gridCaption == null) {
        break missingId;
      }

      id = R.id.gridHeading;
      TextView gridHeading = rootView.findViewById(id);
      if (gridHeading == null) {
        break missingId;
      }

      id = R.id.gridItem;
      CardView gridItem = rootView.findViewById(id);
      if (gridItem == null) {
        break missingId;
      }

      id = R.id.iconRestaurant;
      CircleImageView iconRestaurant = rootView.findViewById(id);
      if (iconRestaurant == null) {
        break missingId;
      }

      id = R.id.imageGrid;
      ImageView imageGrid = rootView.findViewById(id);
      if (imageGrid == null) {
        break missingId;
      }

      return new GridItemViewBinding((RelativeLayout) rootView, gridCaption, gridHeading, gridItem,
          iconRestaurant, imageGrid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
