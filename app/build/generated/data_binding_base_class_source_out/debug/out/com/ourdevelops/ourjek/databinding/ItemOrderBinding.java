// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final CardView background;

  @NonNull
  public final ImageView image;

  @NonNull
  public final LinearLayout line;

  @NonNull
  public final RelativeLayout mainlayout;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView rate;

  @NonNull
  public final RelativeLayout rlayout;

  @NonNull
  public final RelativeLayout rlicon;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView textket;

  @NonNull
  public final TextView texttanggal;

  private ItemOrderBinding(@NonNull RelativeLayout rootView, @NonNull TextView address,
      @NonNull CardView background, @NonNull ImageView image, @NonNull LinearLayout line,
      @NonNull RelativeLayout mainlayout, @NonNull TextView price, @NonNull TextView rate,
      @NonNull RelativeLayout rlayout, @NonNull RelativeLayout rlicon, @NonNull TextView text,
      @NonNull TextView textket, @NonNull TextView texttanggal) {
    this.rootView = rootView;
    this.address = address;
    this.background = background;
    this.image = image;
    this.line = line;
    this.mainlayout = mainlayout;
    this.price = price;
    this.rate = rate;
    this.rlayout = rlayout;
    this.rlicon = rlicon;
    this.text = text;
    this.textket = textket;
    this.texttanggal = texttanggal;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = rootView.findViewById(id);
      if (address == null) {
        break missingId;
      }

      id = R.id.background;
      CardView background = rootView.findViewById(id);
      if (background == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.line;
      LinearLayout line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      RelativeLayout mainlayout = (RelativeLayout) rootView;

      id = R.id.price;
      TextView price = rootView.findViewById(id);
      if (price == null) {
        break missingId;
      }

      id = R.id.rate;
      TextView rate = rootView.findViewById(id);
      if (rate == null) {
        break missingId;
      }

      id = R.id.rlayout;
      RelativeLayout rlayout = rootView.findViewById(id);
      if (rlayout == null) {
        break missingId;
      }

      id = R.id.rlicon;
      RelativeLayout rlicon = rootView.findViewById(id);
      if (rlicon == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.textket;
      TextView textket = rootView.findViewById(id);
      if (textket == null) {
        break missingId;
      }

      id = R.id.texttanggal;
      TextView texttanggal = rootView.findViewById(id);
      if (texttanggal == null) {
        break missingId;
      }

      return new ItemOrderBinding((RelativeLayout) rootView, address, background, image, line,
          mainlayout, price, rate, rlayout, rlicon, text, textket, texttanggal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
