// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LogisticDropDownDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnMain;

  @NonNull
  public final LinearLayout btnWeightConfirm;

  @NonNull
  public final CardView cardErrorDialog;

  @NonNull
  public final RelativeLayout cvClose;

  @NonNull
  public final RelativeLayout selectWeight;

  @NonNull
  public final TextView tvDialogTitle;

  @NonNull
  public final Spinner weightSpinner;

  @NonNull
  public final TextView weightText;

  private LogisticDropDownDialogBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnMain,
      @NonNull LinearLayout btnWeightConfirm, @NonNull CardView cardErrorDialog,
      @NonNull RelativeLayout cvClose, @NonNull RelativeLayout selectWeight,
      @NonNull TextView tvDialogTitle, @NonNull Spinner weightSpinner,
      @NonNull TextView weightText) {
    this.rootView = rootView;
    this.btnMain = btnMain;
    this.btnWeightConfirm = btnWeightConfirm;
    this.cardErrorDialog = cardErrorDialog;
    this.cvClose = cvClose;
    this.selectWeight = selectWeight;
    this.tvDialogTitle = tvDialogTitle;
    this.weightSpinner = weightSpinner;
    this.weightText = weightText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LogisticDropDownDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LogisticDropDownDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.logistic_drop_down_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LogisticDropDownDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_main;
      TextView btnMain = rootView.findViewById(id);
      if (btnMain == null) {
        break missingId;
      }

      id = R.id.btn_weight_confirm;
      LinearLayout btnWeightConfirm = rootView.findViewById(id);
      if (btnWeightConfirm == null) {
        break missingId;
      }

      id = R.id.card_error_dialog;
      CardView cardErrorDialog = rootView.findViewById(id);
      if (cardErrorDialog == null) {
        break missingId;
      }

      id = R.id.cv_close;
      RelativeLayout cvClose = rootView.findViewById(id);
      if (cvClose == null) {
        break missingId;
      }

      id = R.id.selectWeight;
      RelativeLayout selectWeight = rootView.findViewById(id);
      if (selectWeight == null) {
        break missingId;
      }

      id = R.id.tv_dialog_title;
      TextView tvDialogTitle = rootView.findViewById(id);
      if (tvDialogTitle == null) {
        break missingId;
      }

      id = R.id.weightSpinner;
      Spinner weightSpinner = rootView.findViewById(id);
      if (weightSpinner == null) {
        break missingId;
      }

      id = R.id.weightText;
      TextView weightText = rootView.findViewById(id);
      if (weightText == null) {
        break missingId;
      }

      return new LogisticDropDownDialogBinding((RelativeLayout) rootView, btnMain, btnWeightConfirm,
          cardErrorDialog, cvClose, selectWeight, tvDialogTitle, weightSpinner, weightText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
