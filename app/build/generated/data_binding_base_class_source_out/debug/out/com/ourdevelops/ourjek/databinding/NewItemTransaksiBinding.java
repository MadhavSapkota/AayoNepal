// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewItemTransaksiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView addQuantity;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final TextView deskripsi;

  @NonNull
  public final EditText etNotes;

  @NonNull
  public final TextView harga;

  @NonNull
  public final TextView hargapromo;

  @NonNull
  public final LinearLayout listItem;

  @NonNull
  public final LinearLayout lladdrcostemove;

  @NonNull
  public final RelativeLayout lltext;

  @NonNull
  public final View margin;

  @NonNull
  public final TextView namalayanan;

  @NonNull
  public final FrameLayout promobadge;

  @NonNull
  public final TextView quantityText;

  @NonNull
  public final ImageView removeQuantity;

  @NonNull
  public final LinearLayout rightLayout;

  @NonNull
  public final RelativeLayout rlitemtransaksi;

  @NonNull
  public final ShimmerFrameLayout shimreview;

  private NewItemTransaksiBinding(@NonNull LinearLayout rootView, @NonNull ImageView addQuantity,
      @NonNull ImageView btnDelete, @NonNull TextView deskripsi, @NonNull EditText etNotes,
      @NonNull TextView harga, @NonNull TextView hargapromo, @NonNull LinearLayout listItem,
      @NonNull LinearLayout lladdrcostemove, @NonNull RelativeLayout lltext, @NonNull View margin,
      @NonNull TextView namalayanan, @NonNull FrameLayout promobadge,
      @NonNull TextView quantityText, @NonNull ImageView removeQuantity,
      @NonNull LinearLayout rightLayout, @NonNull RelativeLayout rlitemtransaksi,
      @NonNull ShimmerFrameLayout shimreview) {
    this.rootView = rootView;
    this.addQuantity = addQuantity;
    this.btnDelete = btnDelete;
    this.deskripsi = deskripsi;
    this.etNotes = etNotes;
    this.harga = harga;
    this.hargapromo = hargapromo;
    this.listItem = listItem;
    this.lladdrcostemove = lladdrcostemove;
    this.lltext = lltext;
    this.margin = margin;
    this.namalayanan = namalayanan;
    this.promobadge = promobadge;
    this.quantityText = quantityText;
    this.removeQuantity = removeQuantity;
    this.rightLayout = rightLayout;
    this.rlitemtransaksi = rlitemtransaksi;
    this.shimreview = shimreview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewItemTransaksiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewItemTransaksiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.new_item_transaksi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewItemTransaksiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addQuantity;
      ImageView addQuantity = rootView.findViewById(id);
      if (addQuantity == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      ImageView btnDelete = rootView.findViewById(id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.deskripsi;
      TextView deskripsi = rootView.findViewById(id);
      if (deskripsi == null) {
        break missingId;
      }

      id = R.id.etNotes;
      EditText etNotes = rootView.findViewById(id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.harga;
      TextView harga = rootView.findViewById(id);
      if (harga == null) {
        break missingId;
      }

      id = R.id.hargapromo;
      TextView hargapromo = rootView.findViewById(id);
      if (hargapromo == null) {
        break missingId;
      }

      LinearLayout listItem = (LinearLayout) rootView;

      id = R.id.lladdrcostemove;
      LinearLayout lladdrcostemove = rootView.findViewById(id);
      if (lladdrcostemove == null) {
        break missingId;
      }

      id = R.id.lltext;
      RelativeLayout lltext = rootView.findViewById(id);
      if (lltext == null) {
        break missingId;
      }

      id = R.id.margin;
      View margin = rootView.findViewById(id);
      if (margin == null) {
        break missingId;
      }

      id = R.id.namalayanan;
      TextView namalayanan = rootView.findViewById(id);
      if (namalayanan == null) {
        break missingId;
      }

      id = R.id.promobadge;
      FrameLayout promobadge = rootView.findViewById(id);
      if (promobadge == null) {
        break missingId;
      }

      id = R.id.quantityText;
      TextView quantityText = rootView.findViewById(id);
      if (quantityText == null) {
        break missingId;
      }

      id = R.id.removeQuantity;
      ImageView removeQuantity = rootView.findViewById(id);
      if (removeQuantity == null) {
        break missingId;
      }

      id = R.id.rightLayout;
      LinearLayout rightLayout = rootView.findViewById(id);
      if (rightLayout == null) {
        break missingId;
      }

      id = R.id.rlitemtransaksi;
      RelativeLayout rlitemtransaksi = rootView.findViewById(id);
      if (rlitemtransaksi == null) {
        break missingId;
      }

      id = R.id.shimreview;
      ShimmerFrameLayout shimreview = rootView.findViewById(id);
      if (shimreview == null) {
        break missingId;
      }

      return new NewItemTransaksiBinding((LinearLayout) rootView, addQuantity, btnDelete, deskripsi,
          etNotes, harga, hargapromo, listItem, lladdrcostemove, lltext, margin, namalayanan,
          promobadge, quantityText, removeQuantity, rightLayout, rlitemtransaksi, shimreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
