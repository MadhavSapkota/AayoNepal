// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout gridItem;

  @NonNull
  public final ImageView imageGrid;

  @NonNull
  public final TextView notificationContext;

  @NonNull
  public final TextView notificationDate;

  @NonNull
  public final TextView notificationHeading;

  @NonNull
  public final TextView notificationType;

  private NotificationViewBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout gridItem, @NonNull ImageView imageGrid,
      @NonNull TextView notificationContext, @NonNull TextView notificationDate,
      @NonNull TextView notificationHeading, @NonNull TextView notificationType) {
    this.rootView = rootView;
    this.gridItem = gridItem;
    this.imageGrid = imageGrid;
    this.notificationContext = notificationContext;
    this.notificationDate = notificationDate;
    this.notificationHeading = notificationHeading;
    this.notificationType = notificationType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gridItem;
      RelativeLayout gridItem = rootView.findViewById(id);
      if (gridItem == null) {
        break missingId;
      }

      id = R.id.imageGrid;
      ImageView imageGrid = rootView.findViewById(id);
      if (imageGrid == null) {
        break missingId;
      }

      id = R.id.notificationContext;
      TextView notificationContext = rootView.findViewById(id);
      if (notificationContext == null) {
        break missingId;
      }

      id = R.id.notificationDate;
      TextView notificationDate = rootView.findViewById(id);
      if (notificationDate == null) {
        break missingId;
      }

      id = R.id.notificationHeading;
      TextView notificationHeading = rootView.findViewById(id);
      if (notificationHeading == null) {
        break missingId;
      }

      id = R.id.notificationType;
      TextView notificationType = rootView.findViewById(id);
      if (notificationType == null) {
        break missingId;
      }

      return new NotificationViewBinding((RelativeLayout) rootView, gridItem, imageGrid,
          notificationContext, notificationDate, notificationHeading, notificationType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
