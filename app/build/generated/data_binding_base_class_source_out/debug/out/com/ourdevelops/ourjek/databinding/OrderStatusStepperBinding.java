// Generated by view binder compiler. Do not edit!
package com.ourdevelops.ourjek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.ourdevelops.ourjek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderStatusStepperBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View circleFour;

  @NonNull
  public final View circleOne;

  @NonNull
  public final View circleThree;

  @NonNull
  public final View circleTwo;

  @NonNull
  public final RelativeLayout orderStepper;

  @NonNull
  public final View progressFour;

  @NonNull
  public final View progressOne;

  @NonNull
  public final View progressThree;

  @NonNull
  public final View progressTwo;

  @NonNull
  public final TextView tvAccept;

  @NonNull
  public final TextView tvFinish;

  @NonNull
  public final TextView tvPending;

  @NonNull
  public final TextView tvVerified;

  private OrderStatusStepperBinding(@NonNull RelativeLayout rootView, @NonNull View circleFour,
      @NonNull View circleOne, @NonNull View circleThree, @NonNull View circleTwo,
      @NonNull RelativeLayout orderStepper, @NonNull View progressFour, @NonNull View progressOne,
      @NonNull View progressThree, @NonNull View progressTwo, @NonNull TextView tvAccept,
      @NonNull TextView tvFinish, @NonNull TextView tvPending, @NonNull TextView tvVerified) {
    this.rootView = rootView;
    this.circleFour = circleFour;
    this.circleOne = circleOne;
    this.circleThree = circleThree;
    this.circleTwo = circleTwo;
    this.orderStepper = orderStepper;
    this.progressFour = progressFour;
    this.progressOne = progressOne;
    this.progressThree = progressThree;
    this.progressTwo = progressTwo;
    this.tvAccept = tvAccept;
    this.tvFinish = tvFinish;
    this.tvPending = tvPending;
    this.tvVerified = tvVerified;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderStatusStepperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderStatusStepperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_status_stepper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderStatusStepperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circle_four;
      View circleFour = rootView.findViewById(id);
      if (circleFour == null) {
        break missingId;
      }

      id = R.id.circle_one;
      View circleOne = rootView.findViewById(id);
      if (circleOne == null) {
        break missingId;
      }

      id = R.id.circle_three;
      View circleThree = rootView.findViewById(id);
      if (circleThree == null) {
        break missingId;
      }

      id = R.id.circle_two;
      View circleTwo = rootView.findViewById(id);
      if (circleTwo == null) {
        break missingId;
      }

      RelativeLayout orderStepper = (RelativeLayout) rootView;

      id = R.id.progress_four;
      View progressFour = rootView.findViewById(id);
      if (progressFour == null) {
        break missingId;
      }

      id = R.id.progress_one;
      View progressOne = rootView.findViewById(id);
      if (progressOne == null) {
        break missingId;
      }

      id = R.id.progress_three;
      View progressThree = rootView.findViewById(id);
      if (progressThree == null) {
        break missingId;
      }

      id = R.id.progress_two;
      View progressTwo = rootView.findViewById(id);
      if (progressTwo == null) {
        break missingId;
      }

      id = R.id.tv_accept;
      TextView tvAccept = rootView.findViewById(id);
      if (tvAccept == null) {
        break missingId;
      }

      id = R.id.tv_finish;
      TextView tvFinish = rootView.findViewById(id);
      if (tvFinish == null) {
        break missingId;
      }

      id = R.id.tv_pending;
      TextView tvPending = rootView.findViewById(id);
      if (tvPending == null) {
        break missingId;
      }

      id = R.id.tv_verified;
      TextView tvVerified = rootView.findViewById(id);
      if (tvVerified == null) {
        break missingId;
      }

      return new OrderStatusStepperBinding((RelativeLayout) rootView, circleFour, circleOne,
          circleThree, circleTwo, orderStepper, progressFour, progressOne, progressThree,
          progressTwo, tvAccept, tvFinish, tvPending, tvVerified);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
